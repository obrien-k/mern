[{"/Users/kyleobrien/git/mern/client/src/index.js":"1","/Users/kyleobrien/git/mern/client/src/App.js":"2","/Users/kyleobrien/git/mern/client/src/store.js":"3","/Users/kyleobrien/git/mern/client/src/components/layout/Alert.js":"4","/Users/kyleobrien/git/mern/client/src/components/auth/Login.js":"5","/Users/kyleobrien/git/mern/client/src/components/layout/UserMenu.js":"6","/Users/kyleobrien/git/mern/client/src/components/auth/Register.js":"7","/Users/kyleobrien/git/mern/client/src/components/layout/PublicLayout.js":"8","/Users/kyleobrien/git/mern/client/src/utils/setAuthToken.js":"9","/Users/kyleobrien/git/mern/client/src/components/layout/PublicLanding.js":"10","/Users/kyleobrien/git/mern/client/src/actions/alert.js":"11","/Users/kyleobrien/git/mern/client/src/actions/auth.js":"12","/Users/kyleobrien/git/mern/client/src/reducers/index.js":"13","/Users/kyleobrien/git/mern/client/src/utils/api.js":"14","/Users/kyleobrien/git/mern/client/src/actions/types.js":"15","/Users/kyleobrien/git/mern/client/src/reducers/alert.js":"16","/Users/kyleobrien/git/mern/client/src/reducers/auth.js":"17","/Users/kyleobrien/git/mern/client/src/components/pages/PrivateHomepage.js":"18","/Users/kyleobrien/git/mern/client/src/components/pages/Polls.js":"19","/Users/kyleobrien/git/mern/client/src/components/pages/VanityAlbum.js":"20","/Users/kyleobrien/git/mern/client/src/components/pages/Recommendations.js":"21","/Users/kyleobrien/git/mern/client/src/components/pages/FeaturedAlbum.js":"22","/Users/kyleobrien/git/mern/client/src/components/pages/Stats.js":"23","/Users/kyleobrien/git/mern/client/src/components/layout/PrivateFooter.js":"24","/Users/kyleobrien/git/mern/client/src/components/pages/News.js":"25","/Users/kyleobrien/git/mern/client/src/components/auth/Recovery.js":"26","/Users/kyleobrien/git/mern/client/src/components/pages/Collages.js":"27","/Users/kyleobrien/git/mern/client/src/components/pages/Peers.js":"28","/Users/kyleobrien/git/mern/client/src/components/pages/Snatches.js":"29","/Users/kyleobrien/git/mern/client/src/components/pages/Requests.js":"30","/Users/kyleobrien/git/mern/client/src/components/layout/PrivateLayout.js":"31","/Users/kyleobrien/git/mern/client/src/components/auth/ReferralForm.js":"32","/Users/kyleobrien/git/mern/client/src/components/toast/Subscriptions.js":"33","/Users/kyleobrien/git/mern/client/src/config/config.js":"34","/Users/kyleobrien/git/mern/client/src/components/profile/invite/InviteForm.js":"35","/Users/kyleobrien/git/mern/client/src/components/profile/invite/InviteTree.js":"36","/Users/kyleobrien/git/mern/client/src/components/layout/PrivateHeader.js":"37","/Users/kyleobrien/git/mern/client/src/components/admin/ModBar.js":"38","/Users/kyleobrien/git/mern/client/src/components/layout/PrivateContent.js":"39","/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumList.js":"40","/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumListData.js":"41","/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumPage.js":"42"},{"size":146,"mtime":1687724570101,"results":"43","hashOfConfig":"44"},{"size":1960,"mtime":1688182187720,"results":"45","hashOfConfig":"44"},{"size":1050,"mtime":1687824724000,"results":"46","hashOfConfig":"44"},{"size":479,"mtime":1687724570101,"results":"47","hashOfConfig":"44"},{"size":3757,"mtime":1687907891374,"results":"48","hashOfConfig":"44"},{"size":10544,"mtime":1688176870576,"results":"49","hashOfConfig":"44"},{"size":3624,"mtime":1688005337900,"results":"50","hashOfConfig":"44"},{"size":801,"mtime":1687998863581,"results":"51","hashOfConfig":"44"},{"size":383,"mtime":1687824724022,"results":"52","hashOfConfig":"44"},{"size":2272,"mtime":1687907891375,"results":"53","hashOfConfig":"44"},{"size":331,"mtime":1687724570100,"results":"54","hashOfConfig":"44"},{"size":2102,"mtime":1687998863576,"results":"55","hashOfConfig":"44"},{"size":150,"mtime":1687824723999,"results":"56","hashOfConfig":"44"},{"size":717,"mtime":1688169864313,"results":"57","hashOfConfig":"44"},{"size":429,"mtime":1687824723994,"results":"58","hashOfConfig":"44"},{"size":371,"mtime":1687724570101,"results":"59","hashOfConfig":"44"},{"size":973,"mtime":1687824723999,"results":"60","hashOfConfig":"44"},{"size":1645,"mtime":1688178338821,"results":"61","hashOfConfig":"44"},{"size":243,"mtime":1687907891378,"results":"62","hashOfConfig":"44"},{"size":1453,"mtime":1687907891380,"results":"63","hashOfConfig":"44"},{"size":2107,"mtime":1687907891379,"results":"64","hashOfConfig":"44"},{"size":1460,"mtime":1687907891377,"results":"65","hashOfConfig":"44"},{"size":1348,"mtime":1687907891380,"results":"66","hashOfConfig":"44"},{"size":2875,"mtime":1688178002204,"results":"67","hashOfConfig":"44"},{"size":1793,"mtime":1687907891378,"results":"68","hashOfConfig":"44"},{"size":4844,"mtime":1687907891374,"results":"69","hashOfConfig":"44"},{"size":268,"mtime":1687907891377,"results":"70","hashOfConfig":"44"},{"size":256,"mtime":1687907891378,"results":"71","hashOfConfig":"44"},{"size":268,"mtime":1687907891379,"results":"72","hashOfConfig":"44"},{"size":268,"mtime":1687907891379,"results":"73","hashOfConfig":"44"},{"size":486,"mtime":1688178957748,"results":"74","hashOfConfig":"44"},{"size":4014,"mtime":1687998863578,"results":"75","hashOfConfig":"44"},{"size":2004,"mtime":1688177860117,"results":"76","hashOfConfig":"44"},{"size":40,"mtime":1687998863584,"results":"77","hashOfConfig":"44"},{"size":4501,"mtime":1688175975094,"results":"78","hashOfConfig":"44"},{"size":1656,"mtime":1688007435893,"results":"79","hashOfConfig":"44"},{"size":1103,"mtime":1688181768111,"results":"80","hashOfConfig":"44"},{"size":877,"mtime":1688164516329,"results":"81","hashOfConfig":"44"},{"size":604,"mtime":1688181947628,"results":"82","hashOfConfig":"44"},{"size":3425,"mtime":1688106620136,"results":"83","hashOfConfig":"44"},{"size":5293,"mtime":1688159929619,"results":"84","hashOfConfig":"44"},{"size":2918,"mtime":1688114166159,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1s4l3qh",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},"/Users/kyleobrien/git/mern/client/src/index.js",[],["188","189"],"/Users/kyleobrien/git/mern/client/src/App.js",["190"],"import React, { useEffect } from 'react';\nimport { useSelector, Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport api from './utils/api';\n\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\n\nimport PrivateLayout from './components/layout/PrivateLayout';\nimport PrivateHomepage from './components/pages/PrivateHomepage';\n\nimport PublicLayout from './components/layout/PublicLayout';\nimport PublicLanding from './components/layout/PublicLanding';\n\nimport store from './store';\n\nconst AuthenticatedApp = ({userId, userName}) => (\n  <React.Fragment>\n    <PrivateLayout pageTitle=\"Stellar\" userId={userId} userName={userName}>\n    </PrivateLayout>\n  </React.Fragment>\n);\n\nconst PublicApp = () => (\n  <React.Fragment>\n    <PublicLayout pageTitle=\"Stellar\">\n      <section className=\"container\">\n        <Alert />\n        <Routes>\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/*\" element={<PublicLanding />} />\n        </Routes>\n      </section>\n    </PublicLayout>\n  </React.Fragment>\n);\n\nconst AuthenticationCheck = () => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const userId = useSelector((state) => state.auth.user?._id);\n  const userName = useSelector((state) => state.auth.user?.username);\n\n  if (isAuthenticated) {\n    return <AuthenticatedApp userId={userId} userName={userName} />;\n  } else {\n    return <PublicApp />;\n  }\n};\n\nconst App = () => {\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <AuthenticationCheck />\n      </Router>\n    </Provider>\n  );\n};\n\n\nexport default App;\n","/Users/kyleobrien/git/mern/client/src/store.js",[],"/Users/kyleobrien/git/mern/client/src/components/layout/Alert.js",[],"/Users/kyleobrien/git/mern/client/src/components/auth/Login.js",["191","192","193"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const [keepLogged, setKeepLogged] = useState(false);\n  const [error, setError] = useState(null);\n  const [attempts, setAttempts] = useState(0);\n  const [isBanned, setIsBanned] = useState(false);\n  const [bannedUntil, setBannedUntil] = useState(null);\n\n  useEffect(() => {\n    document.cookie = \"cookie_test=1\";\n    if (document.cookie.indexOf('cookie_test') === -1) {\n      alert(\"You appear to have cookies disabled.\");\n    }\n    document.cookie = \"cookie_test=1; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n  }, []);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n      e.preventDefault();\n      if (isBanned) {\n        setError(`You are banned from logging in for another ${bannedUntil}.`);\n        return;\n      }\n      login(email, password);\n    };\n    \n    useEffect(() => {\n      if (isAuthenticated) {\n        navigate('/');\n      }\n    }, [isAuthenticated, navigate]);\n\n  \n\n  return (\n    <div className=\"main\">\n      <div id=\"logo\">\n        <a href=\"/\">\n          <img src=\"/src/static/loginlogo.png\" alt=\"stellar\" title=\"stellar\" />\n        </a>\n      </div>\n      <div className=\"auth\">\n        {!isBanned ? (\n          <form className=\"form\" onSubmit={onSubmit}>\n            {error && <span className=\"warning\">{error}<br /><br /></span>}\n            {attempts > 0 && (\n              <div>\n                <span>You have <span className=\"info\">{6 - attempts}</span> attempts remaining.</span>\n                <br /><br />\n                <strong>WARNING:</strong> You will be banned for 6 hours after your login attempts run out!\n                <br /><br />\n              </div>\n            )}\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\">\n              <i className=\"fas fa-user\" /> Sign Into Your Account\n            </p>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={onChange}\n                minLength=\"6\"\n              />\n            </div>\n            <div>\n              <label title=\"Keep me logged in\" htmlFor=\"keeplogged\">Persistent</label>\n              <input\n                title=\"Keep me logged in\"\n                type=\"checkbox\"\n                id=\"keeplogged\"\n                name=\"keeplogged\"\n                checked={keepLogged}\n                onChange={(e) => setKeepLogged(e.target.checked)}\n              />\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n          </form>\n        ) : (\n          <span className=\"warning\">You are banned from logging in for another {bannedUntil}.</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","/Users/kyleobrien/git/mern/client/src/components/layout/UserMenu.js",["194","195"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst UserMenu = ({ pageId, userId, userName }) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user);\n\n  const [useAdvancedSearch, setUseAdvancedSearch] = useState(false);\n\n  useEffect(() => {\n    // Populate the arrays with data fetched from an API.\n    const loggedUserSearchType = true; \n    setUseAdvancedSearch(loggedUserSearchType);\n  }, []);\n\n  if (!user) {\n    return <div>Loading...</div>; \n  }\n\n  const { bonusPoints, bytesUploaded, bytesDownloaded, requiredRatio, flTokens, hasUnlimitedInvites } = user;\n\n  // Placeholder for formatSize function\n  const formatSize = (bytes) => `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n\n  const addClass = (pageId, pages, className) => pages.includes(pageId) ? className : '';\n\n  return (\n     <div id=\"wrapper\">\n      <h1 className=\"hidden\">SITE_NAME</h1>\n      <div id=\"header\">\n        <div id=\"logo\">\n          <a href=\"/\">Home</a>\n        </div>\n        <div id=\"userinfo\">\n          <ul id=\"userinfo_username\">\n            <li id=\"nav_userinfo\">\n              <a href={`/user/${user}`} className=\"username\">{userName}</a>\n            </li>\n            <li id=\"nav_useredit\">\n              <a href={`/user/edit/${userId}`}>Edit</a>\n            </li>\n            <li id=\"nav_logout\">\n              <a href=\"/logout\">Logout</a>\n            </li>\n          </ul>\n          <ul id=\"userinfo_major\">\n            <li id=\"nav_upload\">\n              <a href=\"/upload\" title=\"Upload\">Upload</a>\n            </li>\n            <li id=\"nav_bonus\">\n              <a href=\"/bonus\" title={`Bonus (${bonusPoints})`}>Bonus ({bonusPoints})</a>\n            </li>\n            <li id=\"nav_invite\">\n              <Link to=\"/invite\">Invite</Link>\n            </li>\n            <li id=\"nav_donate\">\n              <a href=\"/donate\">Donate</a>\n            </li>\n            <li id=\"nav_forums\" className={addClass(pageId, ['forums'], 'active')}>\n              <a href=\"forums.js\">Forums</a>\n            </li>\n            <li id=\"nav_irc\" className={addClass(pageId, ['chat'], 'active')}>\n              <a href=\"wiki.js?action=article&name=irc\">IRC</a>\n            </li>\n          </ul>\n          <ul id=\"userinfo_stats\">\n            <li id=\"stats_seeding\">\n              <a href={`/communities/seeding/${userName}`}>Up:</a>\n              <span className=\"stat\" title={formatSize(bytesUploaded)}>{formatSize(bytesUploaded)}</span>\n            </li>\n            <li id=\"stats_leeching\">\n              <a href={`/communities/leeching/${userName}`}>Down:</a>\n              <span className=\"stat\" title={formatSize(bytesDownloaded)}>{formatSize(bytesDownloaded)}</span>\n            </li>\n            <li id=\"stats_ratio\">\n              Ratio: <span className=\"stat\">{(bytesUploaded / bytesDownloaded).toFixed(2)}</span>\n            </li>\n            {requiredRatio && (\n              <li id=\"stats_required\">\n                <a href=\"/rules#ratio\">Required:</a>\n                <span className=\"stat\">{requiredRatio.toFixed(2)}</span>\n              </li>\n            )}\n            {flTokens > 0 && (\n              <li id=\"fl_tokens\">\n                <a href=\"/wiki/tokens\">Tokens:</a>\n                <span className=\"stat\">{flTokens}</span>\n              </li>\n            )}\n          </ul>\n        </div>\n        <div id=\"menu\">\n          <h4 className=\"hidden\">Site Menu</h4>\n          <ul>\n            <li id=\"nav_index\" className={addClass(pageId, ['index'], 'active')}>\n              <Link to=\"/index.js\">Home</Link>\n            </li>\n            <li id=\"nav_communities\" className={addClass(pageId, ['communities'], 'active')}>\n              <Link to=\"/communities.js\">Communities</Link>\n            </li>\n            <li id=\"nav_collages\" className={addClass(pageId, ['collages'], 'active')}>\n              <Link to=\"/collages.js\">Collages</Link>\n            </li>\n            <li id=\"nav_requests\" className={addClass(pageId, ['requests'], 'active')}>\n              <Link to=\"/requests.js\">Requests</Link>\n            </li>\n            <li id=\"nav_forums\" className={addClass(pageId, ['forums'], 'active')}>\n              <Link to=\"/forums\">Forums</Link>\n            </li>\n            <li id=\"nav_irc\" className={addClass(pageId, ['chat'], 'active')}>\n              <Link to=\"/wiki.js?action=article&name=irc\">IRC</Link>\n            </li>\n            <li id=\"nav_top10\" className={addClass(pageId, ['top10'], 'active')}>\n              <Link to=\"/top10.js\">Top 10</Link>\n            </li>\n            <li id=\"nav_rules\" className={addClass(pageId, ['rules'], 'active')}>\n              <Link to=\"/rules.js\">Rules</Link>\n            </li>\n            <li id=\"nav_wiki\" className={addClass(pageId, ['wiki'], 'active')}>\n              <Link to=\"/wiki.js\">Wiki</Link>\n            </li>\n            <li id=\"nav_staff\" className={addClass(pageId, ['staff'], 'active')}>\n              <Link to=\"/staff.js\" title=\"Staff\">Staff</Link>\n            </li>\n          </ul>\n        </div>\n        <div id=\"searchbars\">\n                <ul>\n                    <li id=\"searchbar_communities\">\n                        <form className=\"search_form\" name=\"communities\" action=\"communities.js\" method=\"get\">\n                            {useAdvancedSearch && (\n                                <input type=\"hidden\" name=\"action\" value=\"advanced\" />\n                            )}\n                            <input\n                                id=\"communitiessearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'communities' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'communities')}\n                                defaultValue=\"Communities\"\n                                placeholder=\"Communities\"\n                                type=\"text\"\n                                name={useAdvancedSearch ? 'groupname' : 'searchstr'}\n                                size=\"17\"\n                            />\n                        </form>\n                    </li>\n                    <li id=\"searchbar_artists\">\n                        <form className=\"search_form\" name=\"artists\" action=\"artist.js\" method=\"get\">\n                            <input\n                                id=\"artistsearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'Artists' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'Artists')}\n                                defaultValue=\"Artists\"\n                                placeholder=\"Artists\"\n                                type=\"text\"\n                                name=\"artistname\"\n                                size=\"17\"\n                            />\n                        </form>\n                    </li>\n                    <li id=\"searchbar_requests\">\n                        <form className=\"search_form\" name=\"requests\" action=\"requests.js\" method=\"get\">\n                            <input\n                                id=\"requestssearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'Requests' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'Requests')}\n                                defaultValue=\"Requests\"\n                                placeholder=\"Requests\"\n                                type=\"text\"\n                                name=\"search\"\n                                size=\"17\"\n                            />\n                        </form>\n                    </li>\n                    <li id=\"searchbar_forums\">\n                        <form className=\"search_form\" name=\"forums\" action=\"forums.js\" method=\"get\">\n                            <input type=\"hidden\" name=\"action\" value=\"search\" />\n                            <input\n                                id=\"forumssearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'Forums' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'Forums')}\n                                defaultValue=\"Forums\"\n                                placeholder=\"Forums\"\n                                type=\"text\"\n                                name=\"search\"\n                                size=\"17\"\n                            />\n                        </form>\n                    </li>\n                    <li id=\"searchbar_log\">\n                        <form className=\"search_form\" name=\"log\" action=\"log.js\" method=\"get\">\n                            <input\n                                id=\"logsearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'Log' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'Log')}\n                                defaultValue=\"Log\"\n                                placeholder=\"Log\"\n                                type=\"text\"\n                                name=\"search\"\n                                size=\"17\"\n                            />\n                        </form>\n                    </li>\n                    <li id=\"searchbar_users\">\n                        <form className=\"search_form\" name=\"users\" action=\"user.js\" method=\"get\">\n                            <input type=\"hidden\" name=\"action\" value=\"search\" />\n                            <input\n                                id=\"userssearch\"\n                                spellCheck=\"false\"\n                                onFocus={(e) => e.target.value === 'Users' && (e.target.value = '')}\n                                onBlur={(e) => e.target.value === '' && (e.target.value = 'Users')}\n                                defaultValue=\"Users\"\n                                placeholder=\"Users\"\n                                type=\"text\"\n                                name=\"search\"\n                                size=\"20\"\n                            />\n                        </form>\n                    </li>\n                    </ul>\n            </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","/Users/kyleobrien/git/mern/client/src/components/auth/Register.js",["196"],"import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport axios from 'axios';\n\nconst openRegistration = process.env.REACT_APP_OPEN_REGISTRATION === 'true';\nconst closeInvite = process.env.REACT_APP_CLOSE_INVITE === 'true';\n\nconst RegistrationForm = ({ setAlert, register }) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [invite, setInvite] = useState('');\n  const [inviteExists, setInviteExists] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const urlInviteKey = params.get('invite');\n    const inviteKeyToCheck = urlInviteKey || invite;\n\n    const checkInvite = async () => {\n      if (inviteKeyToCheck) {\n        try {\n          const response = await axios.get(`/api/services/referral/verify-invite-key?inviteKey=${inviteKeyToCheck}`);\n          if(response.data.success === true){\n            setInviteExists(true); // Setting inviteExists to true\n          } else {\n            setInviteExists(false); // Setting inviteExists to false when success is not true\n          }\n        } catch (error) {\n          console.error(error.response.data);\n          setInviteExists(false); // Optionally handle error cases by setting inviteExists to false\n        }\n      }\n    };\n\n    if (urlInviteKey) {\n      setInvite(urlInviteKey);\n    }\n    checkInvite();\n}, [invite]);\n\n  const handleRegistration = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setAlert(\"Passwords don't match\", 'danger');\n    } else {\n      register({ username, email, password, invite });\n    }\n  };\n\n  const renderForm = () => {\n    if (openRegistration || (invite && inviteExists)) {\n      return (\n        <>\n          <label>\n            Username:\n            <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n          </label>\n          <br />\n          <label>\n            Email:\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n          </label>\n          <br />\n          <label>\n            Password:\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n          </label>\n          <br />\n          <label>\n            Confirm Password:\n            <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n          </label>\n          <br />\n          {invite && !inviteExists && <p>Invite does not exist.</p>}\n          <br />\n          <button type=\"submit\">Register</button>\n        </>\n      );\n    } \n    if(openRegistration===false && invite && !inviteExists) {\n      return (\n        <p>Invite does not exist.</p>\n      );\n    }\n    if(openRegistration===false && closeInvite === true) {\n      return (\n        <p>Registration is closed.</p>\n      );\n    }\n    else {\n      return(\n        <p>Tell admin they forgot an edge case.</p>\n      )\n    }\n  };\n\n  return (\n    <form onSubmit={handleRegistration}>\n      <h1>Registration Form</h1>\n      {renderForm()}\n      <label>\n        Invite Key:\n        <input type=\"text\" value={invite} onChange={(e) => setInvite(e.target.value)} />\n      </label>\n    </form>\n  );\n};\n\nexport default connect(null, { setAlert, register })(RegistrationForm);\n","/Users/kyleobrien/git/mern/client/src/components/layout/PublicLayout.js",[],"/Users/kyleobrien/git/mern/client/src/utils/setAuthToken.js",[],"/Users/kyleobrien/git/mern/client/src/components/layout/PublicLanding.js",["197"],"import React, { useState } from 'react';\nimport { Link, Route, Routes, useLocation } from 'react-router-dom';\nimport Login from '../auth/Login';\nimport Register from '../auth/Register';\nimport RecoveryPage from '../auth/Recovery';\n\nconst PublicLanding = () => {\n  const SHOW_PUBLIC_INDEX = true; // Replace with your logic\n  const OPEN_REGISTRATION = true; // Replace with your logic\n  const OPEN_EXTERNAL_REFERRALS = true; // Replace with your logic\n  const RECOVERY = true; // Replace with your logic\n\n  const [showContent, setShowContent] = useState(SHOW_PUBLIC_INDEX);\n\n  // Get the current location\n  const location = useLocation();\n\n  if (!showContent) {\n    window.location.href = '/login'; // Redirect to the login page\n    return null;\n  }\n\n  return (\n    <>\n      <div id=\"logo\">\n        <img\n          src=\"static/styles/public/images/loginlogo.png\"\n          alt=\"stellar\"\n          title=\"stellar\"\n        />\n      </div>\n\n      <div className=\"main\">\n        <div className=\"poetry\">\n          The latest hotness, but we didn't start the fire.\n        </div>\n      </div>\n\n      <div className=\"actions\">\n        <span className=\"action-bar\">\n          <Link to=\"/login\">Enter</Link>\n          {OPEN_REGISTRATION && (\n            <Link\n              to=\"/register\"\n              title=\"Obtain an account by supplying a valid email address\"\n            >\n              Register\n            </Link>\n          )}\n          {OPEN_EXTERNAL_REFERRALS && (\n            <Link\n              to=\"/referral\"\n              title=\"Obtain an account by proving your membership on a site we trust\"\n            >\n              Referral\n            </Link>\n          )}\n          {RECOVERY && (\n            <Link\n              to=\"/recovery\"\n              title=\"Obtain a new account by proving your membership on the previous site\"\n            >\n              Recovery\n            </Link>\n          )}\n        </span>\n      </div>\n\n      {/* Render the login, register, and recovery components */}\n      <Routes location={location}>\n        <Route path=\"/login\" component={<Login />} />\n        <Route path=\"/register\" component={<Register />} />\n        <Route path=\"/recovery\" component={<RecoveryPage />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default PublicLanding;\n","/Users/kyleobrien/git/mern/client/src/actions/alert.js",[],"/Users/kyleobrien/git/mern/client/src/actions/auth.js",[],"/Users/kyleobrien/git/mern/client/src/reducers/index.js",[],"/Users/kyleobrien/git/mern/client/src/utils/api.js",[],"/Users/kyleobrien/git/mern/client/src/actions/types.js",[],"/Users/kyleobrien/git/mern/client/src/reducers/alert.js",["198"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/kyleobrien/git/mern/client/src/reducers/auth.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/PrivateHomepage.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Polls.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/VanityAlbum.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Recommendations.js",["199"],"// Recommendations.js\nimport React, { useState, useEffect } from 'react';\n\nfunction Recommendations() {\n    const [recommendations, setRecommendations] = useState([]);\n    const [totalPoints, setTotalPoints] = useState(null);\n\n    useEffect(() => {\n        // Fetch recommendations data here\n        // For now, I'm setting dummy data\n\n        setRecommendations([\n            {\n                groupID: 1,\n                userID: 1,\n                username: 'John Doe',\n                groupName: 'Group Name',\n                tagList: 'tag1 tag2'\n            },\n            // ...more recommendations\n        ]);\n\n        setTotalPoints(1000);\n    }, []);\n\n    const renderTags = (tagList) => {\n        const tags = tagList.split(' ').map(tag => tag.replace('_', '.'));\n        return (\n            <div className=\"tags\">\n                {tags.map((tag, index) => (\n                    tag !== 'vanity.house' && (\n                        <a key={index} href={`communities.js?action=basic&taglist=${tag}`}>{tag}</a>\n                    )\n                ))}\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            {recommendations.length >= 4 && (\n                <div className=\"box\" id=\"recommended\">\n                    <div className=\"head colhead_dark\">\n                        <strong>Latest Vanity House additions</strong>\n                    </div>\n                    <table className=\"torrent_table hidden\" id=\"vanityhouse\">\n                        {recommendations.map((recommendation, index) => (\n                            <tr key={index}>\n                                <td>\n                                    <a href={`communities.js?id=${recommendation.groupID}`}>{recommendation.groupName}</a>\n                                    {' '} (by {recommendation.username})\n                                    {renderTags(recommendation.tagList)}\n                                </td>\n                            </tr>\n                        ))}\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Recommendations;\n","/Users/kyleobrien/git/mern/client/src/components/pages/FeaturedAlbum.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Stats.js",[],"/Users/kyleobrien/git/mern/client/src/components/layout/PrivateFooter.js",["200"],"import React, { useEffect, useState } from 'react';\nimport Subscriptions from '../toast/Subscriptions';\n\nconst PrivateFooter = ({ userId, options, userSessions, scriptStartTime, siteLaunchYear, siteName }) => {\n\n    const [load, setLoad] = useState([]);\n    const [lastActive, setLastActive] = useState(null);\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    useEffect(() => {\n      setLoad(sysGetLoadAvg());\n  \n      if (Array.isArray(userSessions) && userSessions.length > 1) {\n          for (const session of userSessions) {\n              if (session.sessionID !== scriptStartTime) {\n                  setLastActive(session);\n                  break;\n              }\n          }\n      }\n  \n      const timer = setInterval(() => {\n          setCurrentTime(new Date());\n      }, 1000);\n  \n      return () => clearInterval(timer);\n  }, [userSessions, scriptStartTime]);\n  \n\n    const sysGetLoadAvg = () => {\n        // Implement this function to get the system load or use an appropriate library\n        return [0, 0, 0];\n    };\n\n    const yearString = siteLaunchYear !== new Date().getFullYear() ? `${siteLaunchYear}-${new Date().getFullYear()}` : siteLaunchYear.toString();\n\n    return (\n        <div id=\"footer\">\n            {options?.disclaimer && (\n                <div id=\"disclaimer_container\" className=\"thin\" style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                    {/* Disclaimer text */}\n                </div>\n            )}\n\n            <p>Site and design &copy; {yearString} {siteName}</p>\n\n            {lastActive && (\n                <p>\n                    <a href=\"user.php?action=sessions\">\n                        <span className=\"tooltip\" title=\"Manage sessions\">Last activity: </span>\n                        {lastActive.lastUpdate}\n                        <span className=\"tooltip\" title=\"Manage sessions\"> from {lastActive.ip}.</span>\n                    </a>\n                </p>\n            )}\n\n            <p>\n                <strong>Time:</strong> <span>{((new Date().getTime() - scriptStartTime) * 1000).toFixed(5)} ms</span>\n                <strong>Used:</strong> <span>{(4096 / 1024 / 1024).toFixed(2)} MB</span>\n                <strong>Load:</strong> <span>{4}</span>\n                <strong>Date:</strong> <span id=\"site_date\">{currentTime.toLocaleDateString()}</span>, <span id=\"site_time\">{currentTime.toLocaleTimeString()}</span>\n            </p>\n            <Subscriptions />\n            {/* Extra divs, for stylesheet developers to add imagery */}\n            <div id=\"extra1\"><span></span></div>\n            <div id=\"extra2\"><span></span></div>\n            <div id=\"extra3\"><span></span></div>\n            <div id=\"extra4\"><span></span></div>\n            <div id=\"extra5\"><span></span></div>\n            <div id=\"extra6\"><span></span></div>\n\n        </div>\n    );\n};\n\nexport default PrivateFooter;\n","/Users/kyleobrien/git/mern/client/src/components/pages/News.js",["201"],"// News.js\nimport React, { useState, useEffect } from 'react';\n\nfunction NewsItem({ newsItem, isAdmin }) {\n    const [isHidden, setIsHidden] = useState(false);\n\n    const toggleHidden = () => {\n        setIsHidden(!isHidden);\n    };\n\n    return (\n        <div id={`news${newsItem.newsID}`} className=\"box news_post\">\n            <div className=\"head\">\n                <strong>{newsItem.title}</strong>\n                {isAdmin && (\n                    <span> - <a href={`tools.php?action=editnews&id=${newsItem.newsID}`} className=\"brackets\">Edit</a></span>\n                )}\n                <span style={{ float: 'right' }}>\n                    <a href=\"#\" onClick={toggleHidden} className=\"brackets\">{isHidden ? 'Show' : 'Hide'}</a>\n                </span>\n            </div>\n            {!isHidden && (\n                <div id={`newsbody${newsItem.newsID}`} className=\"pad\">\n                    {newsItem.body}\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction News() {\n    const [news, setNews] = useState([]);\n    const newsCount = 5; // Set this to the desired maximum number of news items to be displayed\n    const isAdmin = true; // This should be determined based on user permissions.\n\n    useEffect(() => {\n        // Fetch news data here\n        // For now, I'm setting dummy data\n\n        setNews([\n            {\n                newsID: 1,\n                title: 'News Title',\n                body: 'News Body',\n                newsTime: '2023-06-26'\n            },\n            // ...more news items\n        ]);\n    }, []);\n\n    return (\n        <div>\n            {news.slice(0, newsCount).map((newsItem, index) => (\n                <NewsItem key={index} newsItem={newsItem} isAdmin={isAdmin} />\n            ))}\n        </div>\n    );\n}\n\nexport default News;\n","/Users/kyleobrien/git/mern/client/src/components/auth/Recovery.js",["202","203"],"import React, { useState } from \"react\";\nimport axios from \"axios\"; // Assuming you are using axios for HTTP requests\n\nconst LoginWith2FA = ({ onRecoverySuccess }) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [twoFACode, setTwoFACode] = useState(\"\");\n  const [twoFARequired, setTwoFARequired] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n\n  const handleRecoveryStep1 = async () => {\n    try {\n      const response = await axios.post(\"/api/recover\", { email });\n      if (response.data.success) {\n        setKey(response.data.key);\n        setError(\"Email sent with further instructions.\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRecoveryStep2 = async () => {\n    try {\n      const response = await axios.post(\"/api/recover/step2\", { key, password, verifyPassword });\n      if (response.data.success) {\n        onRecoverySuccess();\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null);\n    \n    try {\n      if (twoFARequired) {\n        const response = await axios.post(\"/api/\", {\n          act: '2fa',\n          '2fa': twoFACode,\n        });\n        // Handle success, redirect or whatever you want\n      } else {\n        const response = await axios.post(\"/api/\", {\n          username,\n          password,\n        });\n\n        if (response.data.requires2FA) {\n          setTwoFARequired(true);\n        } else {\n          // Handle success, redirect or whatever you want\n        }\n      }\n    } catch (error) {\n      setError(\"An error occurred during login.\");\n    }\n  };\n\n  return (\n    <div>\n      {key ? (\n        <div className=\"main\">\n          <div id=\"logo\">\n            <a href=\"/\">\n              <img src=\"/src/static/loginlogo.png\" alt=\"stellar\" title=\"stellar\" />\n            </a>\n          </div>\n        <div>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"New Password\"\n          />\n          <input\n            type=\"password\"\n            value={verifyPassword}\n            onChange={(e) => setVerifyPassword(e.target.value)}\n            placeholder=\"Verify Password\"\n          />\n          <button onClick={handleRecoveryStep2}>Submit</button>\n        </div>\n        </div>\n      ) : twoFARequired ? (\n        <div className=\"main\">\n        <div id=\"logo\">\n          <a href=\"/\">\n            <img src=\"/src/static/loginlogo.png\" alt=\"stellar\" title=\"stellar\" />\n          </a>\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={twoFACode}\n            onChange={(e) => setTwoFACode(e.target.value)}\n            placeholder=\"2FA Code\"\n          />\n          <button onClick={handleSubmit}>Submit 2FA Code</button>\n        </div>\n        </div>\n      ) : (\n        <div>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Email Address\"\n          />\n          <button onClick={handleRecoveryStep1}>Recover Password</button>\n        </div>\n      )}\n      {error && <div>{error}</div>}\n    </div>\n  )};\n\nconst TwoFactorRecovery = ({ onTwoFactorRecoverySuccess }) => {\n  const [recoveryKey, setRecoveryKey] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleTwoFactorRecovery = async () => {\n    try {\n      const response = await axios.post(\"/api/2fa/recover\", { recoveryKey });\n      if (response.data.success) {\n        onTwoFactorRecoverySuccess();\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={recoveryKey}\n        onChange={(e) => setRecoveryKey(e.target.value)}\n        placeholder=\"2FA Recovery Key\"\n      />\n      <button onClick={handleTwoFactorRecovery}>Recover</button>\n      {error && <div>{error}</div>}\n    </div>\n  );\n};\n\nconst RecoveryPage = () => {\n  const [recoverySuccess, setRecoverySuccess] = useState(false);\n  const [twoFactorRecoverySuccess, setTwoFactorRecoverySuccess] = useState(false);\n\n  return (\n    <div>\n      {!recoverySuccess && (\n        <LoginWith2FA onRecoverySuccess={() => setRecoverySuccess(true)} />\n      )}\n      {!twoFactorRecoverySuccess && (\n        <TwoFactorRecovery\n          onTwoFactorRecoverySuccess={() => setTwoFactorRecoverySuccess(true)}\n        />\n      )}\n      {recoverySuccess && <div>Password recovery successful!</div>}\n      {twoFactorRecoverySuccess && <div>Two-factor recovery successful!</div>}\n    </div>\n  );\n};\n\nexport default RecoveryPage;\n","/Users/kyleobrien/git/mern/client/src/components/pages/Collages.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Peers.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Snatches.js",[],"/Users/kyleobrien/git/mern/client/src/components/pages/Requests.js",[],"/Users/kyleobrien/git/mern/client/src/components/layout/PrivateLayout.js",["204","205"],"import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport '../../styles/layer_cake/style.css'; \nimport PrivateHeader from './PrivateHeader';\nimport PrivateContent from './PrivateContent';\n\nconst PrivateLayout = ({ pageTitle, userId, userName, children }) => {\n  return (\n    <div>\n      <PrivateHeader userId={userId} userName={userName} pageId={1} />\n      <PrivateContent userId={userId}/>\n      {children}\n    </div>\n  );\n};\n\n\nexport default PrivateLayout;\n","/Users/kyleobrien/git/mern/client/src/components/auth/ReferralForm.js",["206","207","208"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { SITE_NAME } from '../../config/config';\n\nconst ReferralFormStep1 = ({ handleNextStep }) => {\n  const [service, setService] = useState('');\n  const [token, setToken] = useState('');\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    try {\n      const response = await axios.get('/api/services/referral/generate-token');\n      const generatedToken = response.data.token;\n      \n      setToken(generatedToken);\n      handleNextStep(service, generatedToken);\n    } catch (error) {\n      console.error('Error generating token:', error);\n    }\n  };\n  \n  return (\n    <>\n      <h1>External Referrals</h1>\n      <br />\n      <p>\n        Gain access to {SITE_NAME} by verifying that you are a member of another service\n        that we trust.\n      </p>\n      <br />\n      <h4>The process is as follows:</h4>\n      <br />\n      <ol>\n        <li>Select a service from the list that you're a member of.</li>\n        <li>\n          {SITE_NAME} will generate a string of characters that you will place in the body of your profile at the service\n          of your choice.\n        </li>\n        <li>Paste the character string anywhere in the body of your profile.</li>\n        <li>Enter your username and {SITE_NAME} will verify your membership and issue an invite to you.</li>\n        <li>Join {SITE_NAME}!</li>\n      </ol>\n      <br />\n      <h2>Step 1: Paste Your Code</h2>\n      <br />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Service\"\n          value={service}\n          onChange={(e) => setService(e.target.value)}\n        />\n        <button type=\"submit\">Verify</button>\n      </form>\n    </>\n  );\n};\n\nconst ReferralFormStep2 = ({ service, token }) => {\n  const [username, setUsername] = useState('');\n  const [isVerified, setIsVerified] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleVerify = async (event) => {\n    event.preventDefault();\n  \n    try {\n      const response = await axios.get('/api/services/referral/verify-token', {\n        params: {\n          service,\n          userId: username,\n        },\n      });\n  \n      if (response.data.isVerified) {\n        setIsVerified(true);\n        // Handle successful verification (issue invite, send email, etc.)\n      } else {\n        setError('There was an error verifying your account. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('There was an error verifying your account. Please try again.');\n    }\n  };\n  \n\n  return (\n    <>\n      <br />\n      {error && <h3>{error}</h3>}\n      <h2>Step 2: Join {SITE_NAME}</h2>\n      <br />\n      <p>\n        Copy and paste the code below into the profile of your {service} account. It can go anywhere in your profile\n        body (commonly known as \"Profile info 1\") as long as it is in one piece.\n      </p>\n      <br />\n      <p>{token}</p>\n      <br />\n      <br />\n      <p>Enter the username you use at {service} exactly as it appears on the site. This is critical in verifying your account.</p>\n      <br />\n      <form onSubmit={handleVerify}>\n        <input type=\"text\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" />\n        <br />\n        <br />\n        <input type=\"submit\" name=\"submit\" value=\"Verify\" className=\"submit\" />\n      </form>\n    </>\n  );\n};\n\nconst ReferralForm = () => {\n  const [step, setStep] = useState(1);\n  const [service, setService] = useState('');\n  const [token, setToken] = useState('');\n  const SITE_NAME = 'Stellargraph';\n\n  const handleNextStep = (selectedService, generatedToken) => {\n    setService(selectedService);\n    setToken(generatedToken);\n    setStep(2);\n  };\n\n  return (\n    <>\n      {step === 1 && <ReferralFormStep1 handleNextStep={handleNextStep} />}\n      {step === 2 && <ReferralFormStep2 service={service} token={token} />}\n    </>\n  );\n};\n\nexport default ReferralForm;","/Users/kyleobrien/git/mern/client/src/components/toast/Subscriptions.js",["209","210"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Subscriptions = ({userId}) => {\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [commentSubscriptions, setCommentSubscriptions] = useState([]);\n    const [hasNewSubscriptions, setHasNewSubscriptions] = useState(false);\n    \n    useEffect(() => {\n        fetchSubscriptions();\n        fetchCommentSubscriptions();\n        checkNewSubscriptions();\n    }, []);\n\n    const fetchSubscriptions = async () => {\n        try {\n            \n            const response = await axios.get(`/api/subscriptions/get-subscriptions?userId=${userId}`);\n            setSubscriptions(response.data);\n        } catch (error) {\n            console.error('Error fetching subscriptions:', error);\n        }\n    };\n\n    const fetchCommentSubscriptions = async () => {\n        try {\n            const response = await axios.get(`/api/subscriptions/get-comment-subscriptions?userId=${userId}`);\n            setCommentSubscriptions(response.data);\n        } catch (error) {\n            console.error('Error fetching comment subscriptions:', error);\n        }\n    };\n\n    const checkNewSubscriptions = async () => {\n        try {\n            const response = await axios.get(`/api/subscriptions/has-new-subscriptions?userId=${userId}`);\n            setHasNewSubscriptions(response.data);\n        } catch (error) {\n            console.error('Error checking for new subscriptions:', error);\n        }\n    };\n    return (\n      <div>\n          <h2>Subscriptions</h2>\n          <ul>\n              {subscriptions.map(subscription => (\n                  <li key={subscription.id}>{subscription.name}</li>\n              ))}\n          </ul>\n          <h2>Comment Subscriptions</h2>\n          <ul>\n              {commentSubscriptions.map(commentSubscription => (\n                  <li key={commentSubscription.id}>{commentSubscription.name}</li>\n              ))}\n          </ul>\n      </div>\n  );\n  \n};\n\nexport default Subscriptions;\n","/Users/kyleobrien/git/mern/client/src/config/config.js",[],"/Users/kyleobrien/git/mern/client/src/components/profile/invite/InviteForm.js",[],"/Users/kyleobrien/git/mern/client/src/components/profile/invite/InviteTree.js",["211"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst renderTree = (node) => {\n  return (\n    <tr>\n      <td>{node.username}</td>\n      <td>{node.email}</td>\n      <td>{node.joined}</td>\n      <td>{node.lastSeen}</td>\n      <td>{node.uploaded}</td>\n      <td>{node.downloaded}</td>\n      <td>{node.ratio}</td>\n      {node.children && node.children.map(child => renderTree(child))}\n    </tr>\n  );\n};\n\nconst InviteTree = ({userID}) => {\n  const [inviteTreeData, setInviteTreeData] = useState(null);\n\n  useEffect(() => {\n    const fetchInviteTree = async () => {\n      try {\n        const response = await axios.get('/api/services/invite-tree', {\n          params: { userID: userID }\n        });\n        setInviteTreeData(response.data.data);\n      } catch (error) {\n        console.error('Failed to fetch invite tree data', error);\n      }\n    };\n\n    fetchInviteTree();\n  }, []);\n\n  return (\n    <div>\n      <h3>Invitee list</h3>\n      <div className=\"box pad\">\n        <table className=\"invite_table m_table\" width=\"100%\">\n          <thead>\n            <tr className=\"colhead\">\n              <td className=\"m_th_left\">Username</td>\n              <td>Email</td>\n              <td>Joined</td>\n              <td>Last Seen</td>\n              <td className=\"m_th_right\">Uploaded</td>\n              <td className=\"m_th_right\">Downloaded</td>\n              <td className=\"m_th_right\">Ratio</td>\n            </tr>\n          </thead>\n          <tbody>\n            {inviteTreeData && inviteTreeData.map((invitee) => renderTree(invitee))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default InviteTree;\n","/Users/kyleobrien/git/mern/client/src/components/layout/PrivateHeader.js",["212"],"import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport UserMenu from './UserMenu';\nimport Alert from './Alert';\nimport ModBar from '../admin/ModBar';\nimport PrivateHomepage from '../pages/PrivateHomepage';\nimport InviteForm from '../profile/invite/InviteForm';\n\nconst PrivateHeader = ({ alerts, modBar, userId, userName, bonusPoints, bytesUploaded, bytesDownloaded, requiredRatio, flTokens }) => {\n  return (\n    <div id=\"wrapper\">\n      <UserMenu\n        userId={userId}\n        username={userName}\n        bonusPoints={bonusPoints}\n        bytesUploaded={bytesUploaded}\n        bytesDownloaded={bytesDownloaded}\n        requiredRatio={requiredRatio}\n        flTokens={flTokens}\n      />\n      <Alert alerts={alerts} />\n      <ModBar modBarItems={modBar} />\n      <Routes>\n      {/*removing this hasn't broken anything yet <Route path=\"/\" element={<PrivateHomepage userId={userId} />} />*/}\n        <Route\n          path=\"/invite\"\n          element={<InviteForm userId={userId} userName={userName} />}\n  />\n      </Routes>\n    </div>\n  );\n};\n\nexport default PrivateHeader;\n","/Users/kyleobrien/git/mern/client/src/components/admin/ModBar.js",[],"/Users/kyleobrien/git/mern/client/src/components/layout/PrivateContent.js",[],"/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumList.js",[],"/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumListData.js",["213"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport ForumList from './ForumList';\n\nexport async function fetchForums(token) {\n  try {\n    const response = await axios.get('/api/forums', {\n      headers: {\n        'x-auth-token': token,\n      },\n    });\n    console.log('Forum response data from API:', response.data); // Log the response data\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching forums:', error);\n    throw error;\n  }\n}\n\nexport async function fetchCategories(token) {\n  try {\n    const response = await axios.get('/api/forums/categories', {\n      headers: {\n        'x-auth-token': token,\n      },\n    });\n    console.log('Category response data from API:', response.data); // Log the response data\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    throw error;\n  }\n}\n\nexport async function fetchTopics(token) {\n  try {\n    const response = await axios.get('/api/forums/topics', {\n      headers: {\n        'x-auth-token': token,\n      },\n    });\n    console.log('Topic response data from API:', response.data); // Log the response data\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching topics:', error);\n    throw error;\n  }\n}\n\nexport async function fetchLastPost(postId, token) {\n  try {\n    const response = await axios.get(`/api/forums/posts/${postId}`, {\n      headers: {\n        'x-auth-token': token,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching post with ID ${postId}:`, error);\n    throw error;\n  }\n}\n\n\nconst ForumListData = () => {\n  const [combinedData, setCombinedData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const token = useSelector((state) => state.auth.token); // Select the token from the Redux store\n\n  useEffect(() => {\n    if (token) {\n      fetchData();\n    }\n  }, [token]);\n\n  async function fetchData() {\n    try {\n      console.log('FORUM TOPICS');\n        const forumsData = await fetchForums(token);\n        const categoriesData = await fetchCategories(token);\n        const topicsData = await fetchTopics(token);\n      \n        // Group topics by ForumID\n        const topicsByForumId = topicsData.reduce((acc, topic) => {\n            if (topic.ForumID._id) {\n                const forumIdStr = topic.ForumID._id.toString();\n                if (!acc[forumIdStr]) {\n                    acc[forumIdStr] = [];\n                }\n                acc[forumIdStr].push(topic);\n            }\n            return acc;\n        }, {});\n\n        // Populate the last post data and calculate the number of topics and posts for each forum\n        for (let forum of forumsData) {\n            const forumTopics = topicsByForumId[forum._id] || [];\n            console.log('FORUM TOPICS');\n          console.log(forumTopics);\n            // Checking if there are topics in the current forum\n            if (forumTopics.length > 0) {\n                const lastTopic = forumTopics[forumTopics.length - 1];\n                console.log('LAST TOPICS');\n                console.log(lastTopic);\n                if (lastTopic) {\n                  forum.LastPostTopicID = lastTopic._id;\n                  const lastPostID = lastTopic.LastPostID;\n                  \n                  if (lastPostID) {\n                    const lastPost = await fetchLastPost(lastPostID, token);\n                        forum.LastPostBody = lastPost.Body;\n                        forum.LastPostAuthorID = lastPost.AuthorID._id;\n                        forum.LastPostID = lastPost._id;\n                        forum.LastPostTime = lastPost.LastPostTime;\n                        console.log(lastPost);\nconsole.log('LAST POST');\n                        console.log('LAST POST');\n                    }\n                }\n            } else {\n                forum.LastPostTopicID = null;\n                forum.LastPostBody = null;\n                forum.LastPostAuthorID = null;\n                forum.LastPostID = null;\n                forum.LastPostTime = null;\n            }\n\n            forum.NumTopics = forumTopics.length;\n            forum.NumPosts = forumTopics.reduce((sum, topic) => sum + (topic.NumPosts || 0), 0);\n        }\n\n        const combinedData = categoriesData.map(category => {\n            return {\n                id: category._id,\n                name: category.Name,\n                forums: forumsData.filter(forum => forum.CategoryID && forum.CategoryID._id && forum.CategoryID._id.toString() === category._id.toString())\n            };\n        });\n\n        setCombinedData(combinedData);\n        setIsLoading(false);\n\n    } catch (error) {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n        setErrorMessage('Error fetching data');\n    }\n  }\n\n  if (!token) {\n    return <div>Loading...</div>;\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (errorMessage) {\n    return <div>Error: {errorMessage}</div>;\n  }\n\n  // Pass the combinedData to the ForumList component instead of forums, categories, and topics\n  return <ForumList combinedData={combinedData} />;\n};\n\nexport default ForumListData;","/Users/kyleobrien/git/mern/client/src/components/sections/forum/ForumPage.js",["214"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ForumList.css';\n\nconst ForumPage = () => {\n  const { forumId } = useParams();\n\n  // Fetch forum data and topics based on the forumId\n\n  // Mock data for demonstration\n  const forumData = {\n    id: forumId,\n    name: 'Announcements',\n  };\n\n  const topics = [\n    {\n      id: '1',\n      title: 'tst',\n      author: 'admin',\n      lastPostTime: '2 days ago',\n      numReplies: 0,\n    },\n    // Add more topics as needed\n  ];\n\n  return (\n    <div className=\"thin\">\n      <h2>\n        <a href=\"forums.php\">Forums</a> &gt; {forumData.name}\n      </h2>\n      <div className=\"linkbox\">\n        <a href={`forums.php?action=new&amp;forumid=${forumData.id}`} className=\"brackets\">\n          New thread\n        </a>\n        {/* Add more links as needed */}\n      </div>\n      <table className=\"forum_index m_table\" width=\"100%\">\n        <tbody>\n          <tr className=\"colhead\">\n            <td style={{ width: '2%' }}></td>\n            <td className=\"m_th_left\">Latest</td>\n            <td className=\"m_th_right\" style={{ width: '7%' }}>\n              Replies\n            </td>\n            <td style={{ width: '14%' }}>Author</td>\n          </tr>\n          {topics.map((topic) => (\n            <tr key={topic.id} className=\"rowb\">\n              <td className=\"td_read read tooltip\"></td>\n              <td className=\"td_latest\">\n                <span style={{ float: 'left' }} className=\"last_topic\">\n                  <strong>\n                    <a\n                      href={`forums.php?action=viewthread&amp;threadid=${topic.id}`}\n                      className=\"tooltip\"\n                      data-title-plain={topic.title}\n                    >\n                      {topic.title}\n                    </a>\n                  </strong>\n                </span>\n                <span style={{ float: 'left' }} className=\"tooltip last_read\">\n                  <a\n                    href={`forums.php?action=viewthread&amp;threadid=${topic.id}&amp;page=1#post1`}\n                  ></a>\n                </span>\n                <span style={{ float: 'right' }} className=\"last_poster\">\n                  by <a href={`user.php?id=1`}>{topic.author}</a>{' '}\n                  <span className=\"time tooltip\">{topic.lastPostTime}</span>\n                </span>\n              </td>\n              <td className=\"td_replies number_column m_td_right\">{topic.numReplies}</td>\n              {/* Add more columns as needed */}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"linkbox pager\">{/* Add pager links here */}</div>\n      <div className=\"linkbox\">\n        <a\n          href={`forums.php?action=catchup&amp;forumid=${forumData.id}&amp;auth=49bfca1e8f1be12d93dde136ec364d0f`}\n          className=\"brackets\"\n        >\n          Catch up\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ForumPage;\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":23},{"ruleId":"219","severity":1,"message":"223","line":19,"column":20,"nodeType":"221","messageId":"222","endLine":19,"endColumn":31},{"ruleId":"219","severity":1,"message":"224","line":20,"column":20,"nodeType":"221","messageId":"222","endLine":20,"endColumn":31},{"ruleId":"219","severity":1,"message":"225","line":21,"column":23,"nodeType":"221","messageId":"222","endLine":21,"endColumn":37},{"ruleId":"219","severity":1,"message":"226","line":6,"column":9,"nodeType":"221","messageId":"222","endLine":6,"endColumn":17},{"ruleId":"219","severity":1,"message":"227","line":21,"column":81,"nodeType":"221","messageId":"222","endLine":21,"endColumn":100},{"ruleId":"228","severity":1,"message":"229","line":45,"column":4,"nodeType":"230","endLine":45,"endColumn":12,"suggestions":"231"},{"ruleId":"219","severity":1,"message":"232","line":13,"column":23,"nodeType":"221","messageId":"222","endLine":13,"endColumn":37},{"ruleId":"233","severity":1,"message":"234","line":5,"column":1,"nodeType":"235","endLine":15,"endColumn":2},{"ruleId":"219","severity":1,"message":"236","line":6,"column":12,"nodeType":"221","messageId":"222","endLine":6,"endColumn":23},{"ruleId":"219","severity":1,"message":"237","line":6,"column":12,"nodeType":"221","messageId":"222","endLine":6,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":19,"column":21,"nodeType":"240","endLine":19,"endColumn":77},{"ruleId":"219","severity":1,"message":"241","line":6,"column":20,"nodeType":"221","messageId":"222","endLine":6,"endColumn":31},{"ruleId":"219","severity":1,"message":"242","line":43,"column":15,"nodeType":"221","messageId":"222","endLine":43,"endColumn":23},{"ruleId":"219","severity":1,"message":"243","line":2,"column":10,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"219","severity":1,"message":"244","line":2,"column":17,"nodeType":"221","messageId":"222","endLine":2,"endColumn":23},{"ruleId":"219","severity":1,"message":"245","line":7,"column":10,"nodeType":"221","messageId":"222","endLine":7,"endColumn":15},{"ruleId":"219","severity":1,"message":"246","line":62,"column":10,"nodeType":"221","messageId":"222","endLine":62,"endColumn":20},{"ruleId":"219","severity":1,"message":"247","line":119,"column":9,"nodeType":"221","messageId":"222","endLine":119,"endColumn":18},{"ruleId":"219","severity":1,"message":"248","line":7,"column":12,"nodeType":"221","messageId":"222","endLine":7,"endColumn":31},{"ruleId":"228","severity":1,"message":"249","line":13,"column":8,"nodeType":"230","endLine":13,"endColumn":10,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"251","line":35,"column":6,"nodeType":"230","endLine":35,"endColumn":8,"suggestions":"252"},{"ruleId":"219","severity":1,"message":"220","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":23},{"ruleId":"228","severity":1,"message":"253","line":76,"column":6,"nodeType":"230","endLine":76,"endColumn":13,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":64,"column":19,"nodeType":"240","endLine":66,"endColumn":20},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'PrivateHomepage' is defined but never used.","Identifier","unusedVar","'setAttempts' is assigned a value but never used.","'setIsBanned' is assigned a value but never used.","'setBannedUntil' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'hasUnlimitedInvites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'setShowContent' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'totalPoints' is assigned a value but never used.","'load' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setUsername' is assigned a value but never used.","'response' is assigned a value but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'token' is assigned a value but never used.","'isVerified' is assigned a value but never used.","'SITE_NAME' is assigned a value but never used.","'hasNewSubscriptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkNewSubscriptions', 'fetchCommentSubscriptions', and 'fetchSubscriptions'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["262"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [invite, location.search]",{"range":"271","text":"272"},"Update the dependencies array to be: [checkNewSubscriptions, fetchCommentSubscriptions, fetchSubscriptions]",{"range":"273","text":"274"},"Update the dependencies array to be: [userID]",{"range":"275","text":"276"},"Update the dependencies array to be: [fetchData, token]",{"range":"277","text":"278"},[1697,1705],"[invite, location.search]",[461,463],"[checkNewSubscriptions, fetchCommentSubscriptions, fetchSubscriptions]",[906,908],"[userID]",[2031,2038],"[fetchData, token]"]